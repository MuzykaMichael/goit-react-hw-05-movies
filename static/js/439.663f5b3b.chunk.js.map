{"version":3,"file":"static/js/439.663f5b3b.chunk.js","mappings":"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","sources":["Pages/SearchMovie/SearchMovie.styled.jsx","Pages/SearchMovie/SearchMovie.jsx","api/fetchFromApi.js","components/Loader/Loader.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx"],"sourcesContent":["import styled from '@emotion/styled'\n\nexport const SearchForm = styled.form`\ntext-align:center;\n`;\n\nexport const SearchInput = styled.input`\n\n`;\n\nexport const FormButton = styled.button`\n\n`;\n\nexport const SearchMovieDiv = styled.div`\ntext-align:center;\n`;\n\n","import {SearchForm,\n    SearchInput,\n    FormButton,\n    SearchMovieDiv,\n    } from './SearchMovie.styled';\nimport { fetchMovieByQuery } from 'api/fetchFromApi';\nimport {useState, useEffect,} from 'react'\nimport {useSearchParams} from 'react-router-dom'\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const SearchMovie = () =>{\n    const [inputValue,setInputValue] = useState('');\n    const [movies,setMovies] = useState([]);\n    const [searchParams,setSearchParams] = useSearchParams()\n    const query = searchParams.get('query');\n    const [isLoading,setIsLoading] = useState(false);\n    const [error,setError] = useState(false);\n\n    useEffect(()=>{\n        if (query===null){\n            return;\n        }\n        setIsLoading(true);\n        const fetcher = async() =>{\n            try {\n                const response = await fetchMovieByQuery(query)\n                if (response.length===0){\n                    console.alert(\"0 films matching query\")\n                } \n                setMovies(response)\n            }\n            catch(error){\n                setError(error.message)\n            } finally{\n                setIsLoading(false);\n            }\n        }\n        fetcher();\n    },[query])\n\n    const handleSubmit = evt =>{\n        evt.preventDefault();\n        const q = inputValue.trim();\n        if (q!==''){\n            setSearchParams({query:q})\n        } else {\n            return null;\n        }\n\n    }\n\n    const handleChange = evt =>{\n        setInputValue(evt.target.value);\n    }\n\n\n    return(\n        <div>\n            <SearchForm onSubmit={handleSubmit}>\n                <SearchInput\n                type='text'\n                name='query'\n                onChange={handleChange}\n                value={inputValue}/>\n                <FormButton>Search</FormButton>\n            </SearchForm>\n            <SearchMovieDiv>\n                {isLoading&&<Loader/>}\n                {error&&<p>Oops, something went wrong...</p>}\n                {movies.length>0?<MovieList movies={movies}/>:<div>No films matching your query</div>}\n            </SearchMovieDiv>\n        </div>\n    )\n\n}\n\nexport default SearchMovie;","import axios from 'axios'\n\n\nconst apiRefs = {\n  key: '2c6e7be86ec98be9c0020ecf9e4429f5',\n  defaultURL: 'https://api.themoviedb.org/3',\n  trendsURL: '/trending/movie/day',\n  searchURL: '/search/movie',\n  detailsURL: '/movie/',\n  creditsURL: '/credits',\n  reviewsURL:'/reviews'\n}\n\n\nexport const fetchTrendsFromApi = async () =>{\n  try {\n    const response = await axios.get(`${apiRefs.defaultURL}${apiRefs.trendsURL}?api_key=${apiRefs.key}`)\n    return response.data\n  }\n  catch (error) {\n    console.log(error.message)\n  }\n}\n\nexport const fetchMovieByQuery = async (query) =>{\n  try {\n    const response = await axios.get(`${apiRefs.defaultURL}${apiRefs.searchURL}?api_key=${apiRefs.key}&query=${query}`)\n    return response.data.results;\n  }\n  catch(error){\n    console.log(error.message)\n  }\n}\n\nexport const fetchMovieDetails = async (id) =>{\n  try{\n    const response = await axios.get(`${apiRefs.defaultURL}${apiRefs.detailsURL}${id}?api_key=${apiRefs.key}`)\n    return response.data;\n  }\n  catch(error){\n    console.log(error.message)\n  }\n}\n\nexport const fetchMovieCredits = async (id) =>{\n  try{\n    const response = await axios.get(`${apiRefs.defaultURL}${apiRefs.detailsURL}${id}${apiRefs.creditsURL}?api_key=${apiRefs.key}`)\n    return response.data;\n  }\n  catch(error){\n    console.log(error.message)\n  }\n}\n\nexport const fetchMovieReviews = async (id) =>{\n  try{\n    const response = await axios.get(`${apiRefs.defaultURL}${apiRefs.detailsURL}${id}${apiRefs.reviewsURL}?api_key=${apiRefs.key}`)\n    return response.data;\n  } catch(error){\n    console.log(error)\n  }\n}","export const Loader = () =>{\n    return(\n        <p>Loading...</p>\n    )\n}","import styled from '@emotion/styled'\n\n\nexport const MovieListing = styled.ul`\nlist-style-type:none;\n`;\n\nexport const MovieListItem = styled.li`\npadding:10px 0;\n`;","import { MovieListing, MovieListItem } from \"./MovieList.styled\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types'\n\nexport const MovieList = ({movies}) =>{\n    const location = useLocation();\n    return(\n        <MovieListing>\n        {movies.map(({title,id,original_title})=>\n            <MovieListItem key={id}>\n                <Link to={`/movies/${id}`} state={{from:location}}>{title||original_title}</Link>\n            </MovieListItem>\n        )}\n        </MovieListing>\n    )\n}\n\nMovieList.propTypes = {\n    movies: PropTypes.arrayOf(PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        id: PropTypes.number.isRequired,\n        original_title: PropTypes.string.isRequired,\n    }).isRequired,).isRequired,\n}\n\nexport default MovieList;"],"names":["SearchForm","styled","SearchInput","FormButton","SearchMovieDiv","SearchMovie","useState","inputValue","setInputValue","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","isLoading","setIsLoading","error","setError","useEffect","fetcher","fetchMovieByQuery","response","length","console","alert","message","onSubmit","evt","preventDefault","q","trim","type","name","onChange","target","value","Loader","MovieList","apiRefs","fetchTrendsFromApi","axios","data","log","results","fetchMovieDetails","id","fetchMovieCredits","fetchMovieReviews","MovieListing","MovieListItem","location","useLocation","map","title","original_title","to","state","from"],"sourceRoot":""}