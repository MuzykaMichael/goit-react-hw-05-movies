{"version":3,"file":"static/js/562.0e1e0753.chunk.js","mappings":"oQAEaA,E,OAAiBC,EAAAA,GAAH,4C,6CCIdC,EAAW,WACpB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAiCF,EAAAA,EAAAA,WAAS,GAA1C,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAyBJ,EAAAA,EAAAA,WAAS,GAAlC,eAAOK,EAAP,KAAaC,EAAb,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACNH,GAAa,GACb,IAAMI,EAAS,mCAAG,gHAEcC,EAAAA,EAAAA,MAFd,gBAEHC,EAFG,EAEHA,QACPR,EAAUQ,GAHA,gDAKVJ,EAAS,KAAMK,SALL,yBAOVP,GAAa,GAPH,4EAAH,qDAUfI,GACH,GAAC,KAIE,iCACI,SAACX,EAAD,6BACCM,IAAW,SAACS,EAAA,EAAD,IACXP,IAAO,yDACPJ,EAAOY,OAAO,GAAE,SAACC,EAAA,EAAD,CAAWC,OAAQd,KAAU,oEAGzD,EAED,G,+LClCMe,EACC,mCADDA,EAEQ,+BAFRA,EAGO,sBAHPA,EAIO,gBAJPA,EAKQ,UALRA,EAMQ,WANRA,EAOO,WAIAP,EAAkB,mCAAG,6GAEPQ,EAAAA,EAAAA,IAAA,UAAaD,GAAb,OAAkCA,EAAlC,oBAA+DA,IAFxD,cAExBE,EAFwB,yBAGvBA,EAASC,MAHc,gCAM9BC,QAAQC,IAAI,KAAMV,SANY,yDAAH,qDAUlBW,EAAiB,mCAAG,WAAOC,GAAP,gGAENN,EAAAA,EAAAA,IAAA,UAAaD,GAAb,OAAkCA,EAAlC,oBAA+DA,EAA/D,kBAAoFO,IAF9E,cAEvBL,EAFuB,yBAGtBA,EAASC,KAAKT,SAHQ,gCAM7BU,QAAQC,IAAI,KAAMV,SANW,yDAAH,sDAUjBa,EAAiB,mCAAG,WAAOC,GAAP,gGAENR,EAAAA,EAAAA,IAAA,UAAaD,GAAb,OAAkCA,GAAlC,OAAuDS,EAAvD,oBAAqET,IAF/D,cAEvBE,EAFuB,yBAGtBA,EAASC,MAHa,gCAM7BC,QAAQC,IAAI,KAAMV,SANW,yDAAH,sDAUjBe,EAAiB,mCAAG,WAAOD,GAAP,gGAENR,EAAAA,EAAAA,IAAA,UAAaD,GAAb,OAAkCA,GAAlC,OAAuDS,GAAvD,OAA4DT,EAA5D,oBAA0FA,IAFpF,cAEvBE,EAFuB,yBAGtBA,EAASC,MAHa,gCAM7BC,QAAQC,IAAI,KAAMV,SANW,yDAAH,sDAUjBgB,EAAiB,mCAAG,WAAOF,GAAP,gGAENR,EAAAA,EAAAA,IAAA,UAAaD,GAAb,OAAkCA,GAAlC,OAAuDS,GAAvD,OAA4DT,EAA5D,oBAA0FA,IAFpF,cAEvBE,EAFuB,yBAGtBA,EAASC,MAHa,gCAK7BC,QAAQC,IAAR,MAL6B,yDAAH,qD,mECtDjBT,EAAS,WAClB,OACI,qCAEP,C,gFCDYgB,EAAe9B,EAAAA,EAAAA,GAAH,+CAIZ+B,EAAgB/B,EAAAA,EAAAA,GAAH,yC,0BCHbgB,EAAY,SAAC,GAAa,IAAZC,EAAW,EAAXA,OACjBe,GAAWC,EAAAA,EAAAA,MACjB,OACI,SAACH,EAAD,UACCb,EAAOiB,KAAI,gBAAEC,EAAF,EAAEA,MAAMR,EAAR,EAAQA,GAAGS,EAAX,EAAWA,eAAX,OACR,SAACL,EAAD,WACI,SAAC,KAAD,CAAMM,GAAE,kBAAaV,GAAMW,MAAO,CAACC,KAAKP,GAAxC,SAAoDG,GAAOC,KAD3CT,EADZ,KAOnB,C","sources":["Pages/HomePage/HomePage.styled.jsx","Pages/HomePage/HomePage.jsx","api/fetchFromApi.js","components/Loader/Loader.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx"],"sourcesContent":["import styled from '@emotion/styled'\n\nexport const HomePageHeader = styled.h2`\ntext-align:center;\n`;\n\n\n","import { HomePageHeader,} from \"./HomePage.styled\";\nimport { useState, useEffect } from \"react\";\nimport { fetchTrendsFromApi } from \"api/fetchFromApi\";\nimport { MovieList } from \"components/MovieList/MovieList\";\nimport { Loader } from \"components/Loader/Loader\";\n\nexport const HomePage = () =>{\n    const [trends, setTrends] = useState([]);\n    const [isLoading,setIsLoading] = useState(false);\n    const [error,setError] = useState(false);\n\n    useEffect(() =>{\n        setIsLoading(true);\n        const getTrends = async () =>{\n            try{\n                const {results} = await fetchTrendsFromApi();\n                setTrends(results);\n            } catch(error){\n                setError(error.message);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n        getTrends();\n    },[])\n\n    \n    return (\n        <>\n            <HomePageHeader>Trending Today</HomePageHeader>\n            {isLoading&&<Loader/>}\n            {error&&<p>Oops, something went wrong...</p>}\n            {trends.length>0?<MovieList movies={trends}/>:<p>No films for this day,come back later.</p>}\n        </>\n    )\n}\n\nexport default HomePage;","import axios from 'axios'\n\n\nconst apiRefs = {\n  key: '2c6e7be86ec98be9c0020ecf9e4429f5',\n  defaultURL: 'https://api.themoviedb.org/3',\n  trendsURL: '/trending/movie/day',\n  searchURL: '/search/movie',\n  detailsURL: '/movie/',\n  creditsURL: '/credits',\n  reviewsURL:'/reviews'\n}\n\n\nexport const fetchTrendsFromApi = async () =>{\n  try {\n    const response = await axios.get(`${apiRefs.defaultURL}${apiRefs.trendsURL}?api_key=${apiRefs.key}`)\n    return response.data\n  }\n  catch (error) {\n    console.log(error.message)\n  }\n}\n\nexport const fetchMovieByQuery = async (query) =>{\n  try {\n    const response = await axios.get(`${apiRefs.defaultURL}${apiRefs.searchURL}?api_key=${apiRefs.key}&query=${query}`)\n    return response.data.results;\n  }\n  catch(error){\n    console.log(error.message)\n  }\n}\n\nexport const fetchMovieDetails = async (id) =>{\n  try{\n    const response = await axios.get(`${apiRefs.defaultURL}${apiRefs.detailsURL}${id}?api_key=${apiRefs.key}`)\n    return response.data;\n  }\n  catch(error){\n    console.log(error.message)\n  }\n}\n\nexport const fetchMovieCredits = async (id) =>{\n  try{\n    const response = await axios.get(`${apiRefs.defaultURL}${apiRefs.detailsURL}${id}${apiRefs.creditsURL}?api_key=${apiRefs.key}`)\n    return response.data;\n  }\n  catch(error){\n    console.log(error.message)\n  }\n}\n\nexport const fetchMovieReviews = async (id) =>{\n  try{\n    const response = await axios.get(`${apiRefs.defaultURL}${apiRefs.detailsURL}${id}${apiRefs.reviewsURL}?api_key=${apiRefs.key}`)\n    return response.data;\n  } catch(error){\n    console.log(error)\n  }\n}","export const Loader = () =>{\n    return(\n        <p>Loading...</p>\n    )\n}","import styled from '@emotion/styled'\n\n\nexport const MovieListing = styled.ul`\nlist-style-type:none;\n`;\n\nexport const MovieListItem = styled.li`\npadding:10px 0;\n`;","import { MovieListing, MovieListItem } from \"./MovieList.styled\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types'\n\nexport const MovieList = ({movies}) =>{\n    const location = useLocation();\n    return(\n        <MovieListing>\n        {movies.map(({title,id,original_title})=>\n            <MovieListItem key={id}>\n                <Link to={`/movies/${id}`} state={{from:location}}>{title||original_title}</Link>\n            </MovieListItem>\n        )}\n        </MovieListing>\n    )\n}\n\nMovieList.propTypes = {\n    movies: PropTypes.arrayOf(PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        id: PropTypes.number.isRequired,\n        original_title: PropTypes.string.isRequired,\n    }).isRequired,).isRequired,\n}\n\nexport default MovieList;"],"names":["HomePageHeader","styled","HomePage","useState","trends","setTrends","isLoading","setIsLoading","error","setError","useEffect","getTrends","fetchTrendsFromApi","results","message","Loader","length","MovieList","movies","apiRefs","axios","response","data","console","log","fetchMovieByQuery","query","fetchMovieDetails","id","fetchMovieCredits","fetchMovieReviews","MovieListing","MovieListItem","location","useLocation","map","title","original_title","to","state","from"],"sourceRoot":""}