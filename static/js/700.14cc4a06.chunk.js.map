{"version":3,"file":"static/js/700.14cc4a06.chunk.js","mappings":"2RAEaA,EAAqBC,EAAAA,EAAAA,IAAH,uCAIlBC,EAAqBD,EAAAA,EAAAA,GAAH,0BAIlBE,EAAuBF,EAAAA,EAAAA,GAAH,0BAIpBG,EAAqBH,EAAAA,EAAAA,GAAH,0BAIlBI,EAAqBJ,EAAAA,EAAAA,IAAH,0BAIlBK,EAA0BL,EAAAA,EAAAA,EAAH,0B,8DCRvBM,EAAe,WAAM,IAAD,MAC7B,GAAuBC,EAAAA,EAAAA,UAAS,CAAC,GAAjC,eAAOC,EAAP,KAAYC,EAAZ,KACOC,GAAWC,EAAAA,EAAAA,MAAXD,QACDE,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,QAAM,iBAACH,QAAD,IAACA,GAAD,UAACA,EAAUI,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,KAC/C,GAAiCV,EAAAA,EAAAA,WAAS,GAA1C,eAAOW,EAAP,KAAiBC,EAAjB,KACA,GAAyBZ,EAAAA,EAAAA,WAAS,GAAlC,eAAOa,EAAP,KAAaC,EAAb,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACNH,GAAa,GACb,IAAMI,EAAY,mCAAG,8GAEkBC,EAAAA,EAAAA,IAAkBd,GAFpC,OAECe,EAFD,OAGLhB,EAAQ,CAACiB,MAAMD,EAASC,MAAOC,SAASF,EAASE,SAAUC,OAAQH,EAASG,OAAOC,eAAeJ,EAASI,eAAeC,YAAYL,EAASK,YAAYC,aAAaN,EAASM,eAH5K,gDAKLV,EAAS,KAAMW,SALV,yBAOLb,GAAa,GAPR,4EAAH,qDAWlBI,GACH,GAAC,CAACb,KAKC,gCACCQ,IAAW,SAACe,EAAA,EAAD,IACXb,IAAO,0DACR,UAACrB,EAAD,YACI,4BACA,SAAC,KAAD,CAAMmC,GAAIpB,EAAOqB,QAAjB,sBACA,gBAAKC,IAAM5B,EAAKsB,YAAN,yCAAiEtB,EAAKsB,aAApDO,EAAmEC,IAAK9B,EAAKkB,YAEzG,4BACA,SAACzB,EAAD,UAAqBO,EAAKkB,SAC1B,UAACrB,EAAD,WAA0BG,EAAKqB,eAA/B,gBAA8E,GAAlBrB,EAAKuB,aAAjE,QACA,SAAC7B,EAAD,wBACA,SAACG,EAAD,UAA0BG,EAAKmB,YAC/B,SAACxB,EAAD,sBACA,kCACKK,EAAKoB,cADV,aACK,EAAaW,KAAI,YAAc,IAAZC,EAAW,EAAXA,GAAGC,EAAQ,EAARA,KACnB,OACA,yBACI,uBAAIA,KADCD,EAIZ,aAIT,UAACpC,EAAD,YACI,mDACA,2BACI,yBACI,SAAC,KAAD,CAAM8B,GAAG,OAAT,qBAEJ,yBACI,SAAC,KAAD,CAAMA,GAAG,UAAT,8BAIZ,SAAC,EAAAQ,SAAD,CAAUC,UAAU,wCAApB,UACI,SAAC,KAAD,QAIX,EAGD,G,+LClFMC,EACC,mCADDA,EAEQ,+BAFRA,EAGO,sBAHPA,EAIO,gBAJPA,EAKQ,UALRA,EAMQ,WANRA,EAOO,WAIAC,EAAkB,mCAAG,6GAEPC,EAAAA,EAAAA,IAAA,UAAaF,GAAb,OAAkCA,EAAlC,oBAA+DA,IAFxD,cAExBnB,EAFwB,yBAGvBA,EAASsB,MAHc,gCAM9BC,QAAQC,IAAI,KAAMjB,SANY,yDAAH,qDAUlBkB,EAAiB,mCAAG,WAAOC,GAAP,gGAENL,EAAAA,EAAAA,IAAA,UAAaF,GAAb,OAAkCA,EAAlC,oBAA+DA,EAA/D,kBAAoFO,IAF9E,cAEvB1B,EAFuB,yBAGtBA,EAASsB,KAAKK,SAHQ,gCAM7BJ,QAAQC,IAAI,KAAMjB,SANW,yDAAH,sDAUjBR,EAAiB,mCAAG,WAAOgB,GAAP,gGAENM,EAAAA,EAAAA,IAAA,UAAaF,GAAb,OAAkCA,GAAlC,OAAuDJ,EAAvD,oBAAqEI,IAF/D,cAEvBnB,EAFuB,yBAGtBA,EAASsB,MAHa,gCAM7BC,QAAQC,IAAI,KAAMjB,SANW,yDAAH,sDAUjBqB,EAAiB,mCAAG,WAAOb,GAAP,gGAENM,EAAAA,EAAAA,IAAA,UAAaF,GAAb,OAAkCA,GAAlC,OAAuDJ,GAAvD,OAA4DI,EAA5D,oBAA0FA,IAFpF,cAEvBnB,EAFuB,yBAGtBA,EAASsB,MAHa,gCAM7BC,QAAQC,IAAI,KAAMjB,SANW,yDAAH,sDAUjBsB,EAAiB,mCAAG,WAAOd,GAAP,gGAENM,EAAAA,EAAAA,IAAA,UAAaF,GAAb,OAAkCA,GAAlC,OAAuDJ,GAAvD,OAA4DI,EAA5D,oBAA0FA,IAFpF,cAEvBnB,EAFuB,yBAGtBA,EAASsB,MAHa,gCAK7BC,QAAQC,IAAR,MAL6B,yDAAH,qD,mECtDjBhB,EAAS,WAClB,OACI,qCAEP,C","sources":["Pages/MovieDetails/MovieDetails.styled.jsx","Pages/MovieDetails/MovieDetails.jsx","api/fetchFromApi.js","components/Loader/Loader.jsx"],"sourcesContent":["import styled from '@emotion/styled'\n\nexport const MovieDetailsTopDiv = styled.div`\ndisplay:flex;\n`;\n\nexport const MovieDetailsHeader = styled.h2`\n\n`;\n\nexport const MovieDetailsOverview = styled.h4`\n\n`;\n\nexport const MovieDetailsGenres = styled.h4`\n\n`;\n\nexport const MovieDetailsBotDiv = styled.div`\n\n`;\n\nexport const MovieDetailsDescription = styled.p`\n\n`;\n\n","import { MovieDetailsTopDiv,\n    MovieDetailsHeader,\n    MovieDetailsOverview,\n    MovieDetailsGenres,\n    MovieDetailsBotDiv,\n    MovieDetailsDescription,\n} from \"./MovieDetails.styled\";\nimport { useEffect, useState, useRef, Suspense } from \"react\";\nimport {  useParams, Link, useLocation, Outlet } from \"react-router-dom\";\nimport {fetchMovieDetails} from \"api/fetchFromApi\";\nimport defaultImage from '../../components/defaultImage.png';\nimport { Loader } from \"components/Loader/Loader\";\n\n\nexport const MovieDetails = () =>{\n    const [info,setInfo] = useState({});\n    const {movieId} = useParams();\n    const location = useLocation();\n    const goBack = useRef(location?.state?.from ?? '/');\n    const [isLoading,setIsLoading] = useState(false);\n    const [error,setError] = useState(false);\n    \n    useEffect(()=>{\n        setIsLoading(true)\n        const fetchDetails = async () =>{\n                    try{\n                        const response = await fetchMovieDetails(movieId);\n                        setInfo({title:response.title, overview:response.overview, genres: response.genres,original_title:response.original_title,poster_path:response.poster_path,vote_average:response.vote_average,})\n                    } catch(error){\n                        setError(error.message)\n                    } finally {\n                        setIsLoading(false)\n                    }\n        }\n\n        fetchDetails();\n    },[movieId])\n\n\n\n    return(\n        <>\n        {isLoading&&<Loader/>}\n        {error&&<p>Oops, something went wrong...</p>}\n        <MovieDetailsTopDiv>\n            <div>\n            <Link to={goBack.current}>Go back</Link>\n            <img src={!info.poster_path?defaultImage:`https://image.tmdb.org/t/p/w500${info.poster_path}`} alt={info.title} />\n            </div>\n            <div>\n            <MovieDetailsHeader>{info.title}</MovieDetailsHeader>\n            <MovieDetailsDescription>{info.original_title}, User Score:{info.vote_average*10}%</MovieDetailsDescription>\n            <MovieDetailsOverview>Overview</MovieDetailsOverview>\n            <MovieDetailsDescription>{info.overview}</MovieDetailsDescription>\n            <MovieDetailsGenres>Genres</MovieDetailsGenres>\n            <ul>\n                {info.genres?.map(({id,name})=>{\n                    return(\n                    <li key={id}>\n                        <p>{name}</p>\n                    </li>\n                    )\n                })}\n            </ul>\n            </div>\n        </MovieDetailsTopDiv>\n        <MovieDetailsBotDiv>\n            <p>Additional information</p>\n            <ul>\n                <li>\n                    <Link to=\"cast\">Cast</Link>\n                </li>\n                <li>\n                    <Link to=\"reviews\">Reviews</Link>\n                </li>\n            </ul>\n        </MovieDetailsBotDiv>\n        <Suspense fallback={<div>Loading...</div>}>\n            <Outlet/>\n        </Suspense>\n        </>\n    )\n}\n\n\nexport default MovieDetails;","import axios from 'axios'\n\n\nconst apiRefs = {\n  key: '2c6e7be86ec98be9c0020ecf9e4429f5',\n  defaultURL: 'https://api.themoviedb.org/3',\n  trendsURL: '/trending/movie/day',\n  searchURL: '/search/movie',\n  detailsURL: '/movie/',\n  creditsURL: '/credits',\n  reviewsURL:'/reviews'\n}\n\n\nexport const fetchTrendsFromApi = async () =>{\n  try {\n    const response = await axios.get(`${apiRefs.defaultURL}${apiRefs.trendsURL}?api_key=${apiRefs.key}`)\n    return response.data\n  }\n  catch (error) {\n    console.log(error.message)\n  }\n}\n\nexport const fetchMovieByQuery = async (query) =>{\n  try {\n    const response = await axios.get(`${apiRefs.defaultURL}${apiRefs.searchURL}?api_key=${apiRefs.key}&query=${query}`)\n    return response.data.results;\n  }\n  catch(error){\n    console.log(error.message)\n  }\n}\n\nexport const fetchMovieDetails = async (id) =>{\n  try{\n    const response = await axios.get(`${apiRefs.defaultURL}${apiRefs.detailsURL}${id}?api_key=${apiRefs.key}`)\n    return response.data;\n  }\n  catch(error){\n    console.log(error.message)\n  }\n}\n\nexport const fetchMovieCredits = async (id) =>{\n  try{\n    const response = await axios.get(`${apiRefs.defaultURL}${apiRefs.detailsURL}${id}${apiRefs.creditsURL}?api_key=${apiRefs.key}`)\n    return response.data;\n  }\n  catch(error){\n    console.log(error.message)\n  }\n}\n\nexport const fetchMovieReviews = async (id) =>{\n  try{\n    const response = await axios.get(`${apiRefs.defaultURL}${apiRefs.detailsURL}${id}${apiRefs.reviewsURL}?api_key=${apiRefs.key}`)\n    return response.data;\n  } catch(error){\n    console.log(error)\n  }\n}","export const Loader = () =>{\n    return(\n        <p>Loading...</p>\n    )\n}"],"names":["MovieDetailsTopDiv","styled","MovieDetailsHeader","MovieDetailsOverview","MovieDetailsGenres","MovieDetailsBotDiv","MovieDetailsDescription","MovieDetails","useState","info","setInfo","movieId","useParams","location","useLocation","goBack","useRef","state","from","isLoading","setIsLoading","error","setError","useEffect","fetchDetails","fetchMovieDetails","response","title","overview","genres","original_title","poster_path","vote_average","message","Loader","to","current","src","defaultImage","alt","map","id","name","Suspense","fallback","apiRefs","fetchTrendsFromApi","axios","data","console","log","fetchMovieByQuery","query","results","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}